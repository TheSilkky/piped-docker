version: "3.8"

networks:
  web:
    external: true
  backend:
    driver: overlay

volumes:
  database:
    driver: local

services:

  postgresql:
    image: postgres:14.5-alpine
    hostname: postgresql
    networks:
      - backend
    volumes:
      - database:/var/lib/postgresql/data
      - /etc/localtime:/etc/localtime:ro
    environment:
      - POSTGRES_DB=piped
      - POSTGRES_USER=piped
      - POSTGRES_PASSWORD=${POSTGRESQL_PASSWORD}
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: any

  backend:
    image: git.silkky.dev/ellie/piped-backend:latest
    hostname: piped-backend
    networks:
      - web
      - backend
    environment:
      - PORT=8080
      - HTTP_WORKERS=2
      - PROXY_PART=https://${PIPED_PROXY_HOST}
      - API_URL=https://${PIPED_BACKEND_HOST}
      - FRONTEND_URL=https://${PIPED_FRONTEND_HOST}
      - PUBSUB_URL=https://${PIPED_PUBSUB_HOST}
      - COMPROMISED_PASSWORD_CHECK=true
      - DISABLE_REGISTRATION=${DISABLE_REGISTRATION}
      - DISABLE_RYD=true
      - DISABLE_LBRY=true
      - hibernate.connection.url=jdbc:postgresql://postgresql:5432/piped
      - hibernate.connection.driver_class=org.postgresql.Driver
      - hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
      - hibernate.connection.username=piped
      - hibernate.connection.password=${POSTGRESQL_PASSWORD}
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: any
      labels:
        - traefik.enable=true
        - traefik.http.routers.piped-backend.rule=Host(`${PIPED_BACKEND_HOST}`)
        - traefik.http.routers.piped-backend.entryPoints=websecure
        - traefik.http.routers.piped-backend.tls.certResolver=le
        - traefik.http.routers.piped-backend.service=backend-piped
        - traefik.http.routers.piped-pubsub.rule=Host(`${PIPED_PUBSUB_HOST}`) && Path(`/webhooks/pubsub`)
        - traefik.http.routers.piped-pubsub.entryPoints=websecure
        - traefik.http.routers.piped-pubsub.tls.certResolver=le
        - traefik.http.routers.piped-pubsub.service=backend-piped
        - traefik.http.services.backend-piped.loadbalancer.server.port=8080

  proxy:
    image: git.silkky.dev/ellie/piped-proxy:latest
    hostname: piped-proxy
    networks:
      - web
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: any
      labels:
        - traefik.enable=true
        - traefik.http.routers.piped-proxy.rule=Host(`${PIPED_PROXY_HOST}`)
        - traefik.http.routers.piped-proxy.entryPoints=websecure
        - traefik.http.routers.piped-proxy.tls.certResolver=le
        - traefik.http.routers.piped-proxy.service=proxy-piped
        - traefik.http.services.proxy-piped.loadbalancer.server.port=8080

  frontend:
    image: git.silkky.dev/ellie/piped-frontend:latest
    hostname: piped-frontend
    networks:
      - web
    environment:
      - API_HOST=${PIPED_BACKEND_HOST}
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: any
      labels:
        - traefik.enable=true
        - traefik.http.routers.piped-frontend.rule=Host(`${PIPED_FRONTEND_HOST}`)
        - traefik.http.routers.piped-frontend.entryPoints=websecure
        - traefik.http.routers.piped-frontend.tls.certResolver=le
        - traefik.http.routers.piped-frontend.service=frontend-piped
        - traefik.http.services.frontend-piped.loadbalancer.server.port=3000
